{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","status","slice","length","calculateWinner","setState","concat","step","current","winner","line","moves","map","move","desc","key","jumpTo","handleClick","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd349fda.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/*\r\nclass Square extends React.Component {\r\n\r\n    render() {\r\n      return (\r\n        <button \r\n            className=\"square\" \r\n            onClick={()=>this.props.onClick()}\r\n        >\r\n          {this.props.value}\r\n        </button>\r\n      );\r\n    }\r\n  }*/\r\n  function Square(props){\r\n      return(\r\n          /* gdyby był komponent dziedziczący po klasie\r\n          to musiałoby być onClick={()=>this.props.onClick()} */\r\n        <button className=\"square\" onClick={props.onClick}>\r\n         {props.value}\r\n        </button>\r\n      )\r\n  }\r\n  \r\n  class Board extends React.Component {\r\n\r\n\r\n    renderSquare(i) {\r\n      return (\r\n      <Square \r\n        value={this.props.squares[i]}\r\n        onClick={()=> this.props.onClick(i)}\r\n      />\r\n      );\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(0)}\r\n            {this.renderSquare(1)}\r\n            {this.renderSquare(2)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(3)}\r\n            {this.renderSquare(4)}\r\n            {this.renderSquare(5)}\r\n          </div>\r\n          <div className=\"board-row\">\r\n            {this.renderSquare(6)}\r\n            {this.renderSquare(7)}\r\n            {this.renderSquare(8)}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  class Game extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n       {/* state w konstruktorze, chyba o tym nie pamietalem*/}\r\n      this.state = {\r\n        history: [{\r\n          squares: Array(9).fill(null)\r\n        }],\r\n        stepNumber: 0,\r\n        xIsNext: true,\r\n        status: 'Next player: X'\r\n      }\r\n    }\r\n\r\n    handleClick(i)  {\r\n      /*kopiuje tablice, żeby nie zmieniać jej wartości bezpośrednio\r\n      gdybym zmieniał bezpośredno, w przyszłości nie miałbym możliwości\r\n      powrotu do poprzedniego stanu */\r\n      const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n      const current = history[history.length - 1]\r\n      const squares = current.squares.slice()\r\n      /* jeśli istnieje zwycięzca to nie możesz kliknąć w pole\r\n      lub jeśli coś jest już na tym polu to nie możesz zmienić jego \r\n      wartości */\r\n      if(calculateWinner(squares) || squares[i]){\r\n        return;\r\n      }\r\n      squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n      this.setState({\r\n          history: history.concat([{\r\n            squares: squares\r\n          }]),\r\n          stepNumber: history.length,\r\n          xIsNext: !this.state.xIsNext,\r\n      })\r\n     /* if(this.state.stepNumber == 8){\r\n        this.setState({\r\n          status: \"Koniec gry, REMIS!\"\r\n        })\r\n      } */\r\n    }\r\n\r\n    jumpTo(step){\r\n      this.setState({\r\n        stepNumber: step,\r\n        xIsNext: (step % 2) === 0,\r\n      })\r\n    }\r\n\r\n    render() {\r\n      const history = this.state.history\r\n      const current = history[this.state.stepNumber]\r\n      const winner = calculateWinner(current.squares)\r\n      let status\r\n      if(this.state.stepNumber == 9){\r\n        status = \"Koniec gry, REMIS!\"\r\n      }else{\r\n        if(winner){\r\n          status = \"Wygrywa gracz \" + winner.winner\r\n          for(let i = 0; i < winner.line.length; i++){\r\n            current.squares[winner.line[i]] = 'Z'\r\n          }\r\n        }else{\r\n          status = 'Next player: ' +  (this.state.xIsNext ? 'X' : \r\n          'O')\r\n        } \r\n      }\r\n\r\n      const moves = history.map((step,move) => {\r\n        const desc = move ? 'Przejdź do ruchu #' + move : \r\n        'Przejdź na początek gry';\r\n        return (\r\n          <li key={move}>\r\n            <button onClick={()=>this.jumpTo(move)}>{desc}</button>\r\n          </li>\r\n        )\r\n      })\r\n\r\n      return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n              squares={current.squares}\r\n              onClick={(i) => this.handleClick(i)}\r\n              />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n\r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n  );\r\n  \r\n\r\n  function calculateWinner(squares){\r\n    const lines = [\r\n      [0,1,2],\r\n      [3,4,5],\r\n      [6,7,8],\r\n      [0,3,6],\r\n      [1,4,7],\r\n      [2,5,8],\r\n      [0,4,8],\r\n      [2,4,6]\r\n    ]\r\n    for(let i = 0; i< lines.length; i++){\r\n      const [a,b,c] = lines[i];\r\n      if(squares[a] && squares[a] == squares[b] && squares[a] == squares[c]){\r\n        return {\r\n          winner: squares[a], \r\n          line: [a,b,c]\r\n        }\r\n      }\r\n    }\r\n    return null;\r\n  } "],"sourceRoot":""}